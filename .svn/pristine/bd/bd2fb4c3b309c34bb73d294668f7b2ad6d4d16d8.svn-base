close all
clear
%% Robobot line sensor plot

basedir = 'data/build/';
%path = 'log_20231223_090053.480/'; 
%path = 'log_20231223_092833.795/'; 
%path = 'log_20231223_093403.823/'; 
%path = 'log_20231223_094649.106/'; 
%path = 'log_20231223_094938.454/'; 
%path = 'log_20231223_124823.054/'; 
%path = 'log_20231223_125036.575/'; 
path = 'log_20231223_130655.826/'; 

%basedir = 'saved/';
%path = 'log_20231221_160451.621/'; % passing at angle
%path = 'log_20231221_161001.464/'; % follow with crossing right


ddn = load(strcat(basedir,path,'log_edge_normalized.txt'));
% Edge sensor logfile log_edge.txt
% 	Calib white 406 526 596 577 596 533 505 436
% 	Calib black 128 177 188 171 166 150 145 130
% 	White threshold (%of span) 750 %
% 	Crossing level (%of span) 800 %
% 1 	Time (sec)
% 2 	Edge valid
% 3 	Left edge position(m)
% 4 	Right edge position (m)
% 5 	Crossing valid
% 6 	Crossing average
ddl = load(strcat(basedir,path,'log_edge.txt'));
% Linesensor raw values logfile (reflectance values)
% Sensor power high=1
% 1 	Time (sec)
% 2..9 	Sensor 1..8 AD value difference (illuminated - not illuminated)
ddr = load(strcat(basedir,path,'log_edge_raw.txt'));
% Edge logfile: log_edge_ctrl.txt
% 1 	Time (sec)
% 2 	Enabled
% 3 	Edge 1=left, 0=right
% 4 	Edge offset (signed in m; should be less than about 0.01)
% 5 	control value (rad/sec)
% 6 	limited
ddc = load(strcat(basedir,path,'log_edge_ctrl.txt'));

%%
series = 45;
fig = 1000 * series + 100000;

%% edge
figure(fig + 0)
hold off
plot(ddl(:,1) - ddl(1,1), ddl(:,2))
hold on
plot(ddl(:,1) - ddl(1,1), ddl(:,3)*100)
plot(ddl(:,1) - ddl(1,1), ddl(:,4)*100)
plot(ddl(:,1) - ddl(1,1), ddl(:,5))
plot(ddl(:,1) - ddl(1,1), ddl(:,6)*100)
legend('valid', 'left (cm)', 'right (cm)','crossing', 'Line width (cm)');
grid on
xlabel('(sec)')
title('Crossing to the right')
%% values normalized
figure(fig + 2)
hold off
plot(ddl(:,1) - ddl(1,1), ddl(:,2)/10)
hold on
plot(ddn(:,1) - ddl(1,1), ddn(:,2))
plot(ddn(:,1) - ddl(1,1), ddn(:,3))
plot(ddn(:,1) - ddl(1,1), ddn(:,4))
plot(ddn(:,1) - ddl(1,1), ddn(:,5))
plot(ddn(:,1) - ddl(1,1), ddn(:,6))
plot(ddn(:,1) - ddl(1,1), ddn(:,7))
plot(ddn(:,1) - ddl(1,1), ddn(:,8))
legend('valid', 'ls1', 'ls2', 'ls3', 'ls4', 'ls5', 'ls6', 'ls7', 'ls8');
grid on
xlabel('(sec)')
title('normalized')

%% values raw
figure(fig + 5)
hold off
plot(ddl(:,1) - ddl(1,1), ddl(:,2)/10)
hold on
plot(ddr(:,1) - ddl(1,1), ddr(:,2))
plot(ddr(:,1) - ddl(1,1), ddr(:,3))
plot(ddr(:,1) - ddl(1,1), ddr(:,4))
plot(ddr(:,1) - ddl(1,1), ddr(:,5))
plot(ddr(:,1) - ddl(1,1), ddr(:,6))
plot(ddr(:,1) - ddl(1,1), ddr(:,7))
plot(ddr(:,1) - ddl(1,1), ddr(:,8))
plot(ddr(:,1) - ddl(1,1), ddr(:,9))
legend('valid', 'ls1', 'ls2', 'ls3', 'ls4', 'ls5', 'ls6', 'ls7', 'ls8');
grid on
xlabel('(sec)')
title('raw')
%% mesh
x = -3.5:1:3.5;
y = ddn(:,1) - ddl(1,1);
z = ddn(:,2:9);
figure(fig+7)
mesh(x,y,z)
%% calibrate - interval must be adjusted

white = mean(ddr(200:220,2:9))
black = mean(ddr(1:50,2:9))


